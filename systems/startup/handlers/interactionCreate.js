const fs = require('fs');
const path = require('path');
const { EmbedBuilder, ActionRowBuilder, StringSelectMenuBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');

// Load system configuration
async function loadSystemConfig() {
    try {
        const configPath = path.join(__dirname, '../data/config.json');
        const configData = fs.readFileSync(configPath, 'utf8');
        return JSON.parse(configData);
    } catch (error) {
        console.error('ุฎุทุฃ ูู ุชุญููู ุฅุนุฏุงุฏุงุช ูุธุงู ุงูุณุชุงุฑุชุจ:', error);
        return null;
    }
}

module.exports = {
    name: 'interactionCreate',
    async execute(interaction) {
        const config = await loadSystemConfig();
        if (!config) return;

        try {
            // โ Select Menu ูุฑูุชุจ ุงูุฅุดุนุงุฑุงุช
            if (interaction.isStringSelectMenu()) {
                if (interaction.customId === 'notification_roles') {
                    const addedRoles = [];
                    const removedRoles = [];

                    const member = interaction.member;
                    const guild = interaction.guild;

                    const selectedRoles = interaction.values; // ูุซู ['serverNotice', 'eventNotice']

                    for (const roleKey of selectedRoles) {
                        const roleId = config.roles[roleKey];
                        const role = guild.roles.cache.get(roleId);
                        if (!role) continue;

                        if (member.roles.cache.has(roleId)) {
                            // ุนูุฏู ุงูุฑุชุจุฉุ ูุดูููุง
                            await member.roles.remove(roleId);
                            removedRoles.push(role.name);
                        } else {
                            // ูุง ุนูุฏู ุงูุฑุชุจุฉุ ูุนุทูู
                            await member.roles.add(roleId);
                            addedRoles.push(role.name);
                        }
                    }

                    let replyMessage = 'โ ุชู ุชุญุฏูุซ ุฑุชุจ ุงูุฅุดุนุงุฑุงุช ุงูุฎุงุตุฉ ุจู:\n\n';

                    if (addedRoles.length > 0) {
                        replyMessage += `๐ข ุชู ุฅุนุทุงุคู: ${addedRoles.map(r => `\`${r}\``).join(', ')}\n`;
                    }

                    if (removedRoles.length > 0) {
                        replyMessage += `๐ด ุชู ุฅุฒุงูุฉ: ${removedRoles.map(r => `\`${r}\``).join(', ')}\n`;
                    }

                    if (addedRoles.length === 0 && removedRoles.length === 0) {
                        replyMessage = 'โน๏ธ ูู ูุชู ุชุบููุฑ ุฃู ุดูุกุ ุฃูุช ุจุงููุนู ุชูุชูู ุงูุฅุนุฏุงุฏุงุช ุงูุตุญูุญุฉ.';
                    }

                    await interaction.reply({
                        content: replyMessage,
                        flags: 64
                    });
                }
            }

            // โ ุฃุฒุฑุงุฑ ุงูููุงููู ููุณุงุฆู ุงูุชูุงุตู
            if (interaction.isButton()) {
                if (interaction.customId === 'guidelines') {
                    await interaction.reply({
                        content:
                            "๐ ููุงููู ุงูุณูุฑูุฑ ุงูุนุงูุฉ :\n\n" +
                            "1 - ุงูุงุญุชุฑุงู ุฃููุงู ูุฃุฎูุฑูุง ูููุน ุงูุฅุณุงุกุฉ ุฃู ุงูุงุณุชูุฒุงุก ุจุฃู ุนุถู ูู ุงูุฃุนุถุงุก ุงู ุชูุฏูู ุงู ุดูู ูู ุงุดูุงู ุงูุงุณุงุกุฉ ูู.โ\n" +
                            "2 - ููููุน ุงูููุงุดุงุช ุงูุฏูููุฉ ุฃู ุงูุณูุงุณูุฉ ูุงูุทุงุฆููุฉ ุจ ุงู ุดูู ูู ุงูุงุดูุงู ููุฑุฌู ุนุฏู ุงูุชุทุฑู ูููุงุถูุน ุงูุฏูู ุฃู ุงูุณูุงุณุฉ. ๐\n" +
                            "3 - ููููุน ุงูุงุนูุงูุงุช ุจุฏูู ุงุฐู ูุณุจูุ ูููุน ุงูุชุฑููุฌ ูุฃู ุณูุฑูุฑุ ููุงุฉุ ุญุณุงุจุ ุฎุงุฑุฌ ุงุทุงุฑ **MT** ุจุฏูู ุฅุฐู ูู ุงูุฅุฏุงุฑุฉ.๐ซ\n" +
                            "4 - ุงูุณุจุงู ููููุนุ ูููุน ุฅุฑุณุงู ุงูุฑุณุงุฆู ุงููุชูุฑุฑุฉ ุฃู ุงูุนุดูุงุฆูุฉ ุฃู ุงูููุดู ุงููุชูุฑุฑ ููุขุฎุฑูู (mention spam). โ\n" +
                            "5 - ููููุน ุงุณุชุฎุฏุงู ุงู ููุงุฉ ุตูุชูุฉ ุฃู ูุชุงุจูุฉ ุจุบูุฑ ุงูุบุฑุถ ุงููููุดุฃุฉ ูุฃุฌูู. ๐\n" +
                            "6 - ููููุน ูุดุฑ ุงููุญุชูู ุบูุฑ ุงููุงุฆู (ุตูุฑุ ููุฏููุ ุฃู ููุงู ุบูุฑ ููุงุณุจ). ๐ซ\n" +
                            "7 - ุงุญุชุฑุงู ูุฑูู ุงูุฅุฏุงุฑุฉุ ูุฃู ูุญุงููุฉ ุฌุฏุงู ุฃู ุชูุฑุจ ูู ุงูุนูุงุจ ูุฏ ุชุคุฏู ููุจุงูุฏ. ๐ก๏ธ\n" +
                            "8 - ุนุฏู ุทูุจ ุฃู ูุดุฑ ูุนูููุงุช ุดุฎุตูุฉ (ุฃุฑูุงูุ ุนูุงูููุ ุฃู ุจูุงูุงุช ุฎุงุตุฉ). ๐\n" +
                            "9 - ุงูุชุจููุบ ุนู ุงููุฎุงููุงุช ูุฌุจ ุฃู ูููู ูููุดุฑูููุ ูุง ุชุชุนุงูู ูุน ุงููุฎุงูู ุจููุณู. ๐ฃ\n" +
                            "10 - ุงูููุงููู ูุงุจูุฉ ููุชุญุฏูุซ ูู ุฃู ููุช. ๐\n\n" +
                            "**ุชุญูุงุช ุฅุฏุงุฑุฉ ูุฌุชูุน ุงูุจูุฏุฉ ุงูุบุงูุถุฉ <:96MTC:>**",
                        flags: 64
                    });
                }

                if (interaction.customId === 'social_media') {
                    await interaction.reply({
                        content:
                            "๐ ูุฑุญุจูุง ุจู ูู ุงููุณู ุงูุฎุงุต ุจูุณุงุฆู ุงูุชูุงุตู ุงูุงุฌุชูุงุนูุฉ ูุฏู ุณูุฑูุฑ ุงูุจูุฏุฉ ุงูุบุงูุถุฉ:\n\n" +
                            "<:MTC53:1209405918161408010> [Twitter](https://twitter.com/MT_FiveM)\n" +
                            "<:MTC53:1209405918161408010> [Discord](https://discord.gg/mt)\n" +
                            "<:MTC53:1209405918161408010> [YouTube](https://www.youtube.com/@MT_FiveM)\n" +
                            "<:MTC53:1209405918161408010> [Store](https://mtrp.store/)\n" +
                            "<:MTC53:1209405918161408010> [WhatsApp](https://mtrp.store/whatsapp/send)\n" +
                            "<:MTC53:1209405918161408010> [TikTok](https://www.tiktok.com/@mtrp.gg?_t=8p0KTBvMW3Q&_r=1)",
                        flags: 64
                    });
                } else if (interaction.customId === 'apply_applications') {
                    // ุงูุชุญูู ูู ุฅุนุฏุงุฏุงุช ุงูุชุญูู ูู ุงูุฒุฑ
                    const startupConfig = require('../data/config.json');
                    if (!startupConfig.applyButtonEnabled) {
                        return interaction.reply({
                            content: 'โ ูุธุงู ุงูุชูุฏููุงุช ูุนุทู ุญุงููุงู.',
                            ephemeral: true
                        });
                    }

                    // ุงุณุชุฏุนุงุก ูุธุงู Applications
                    try {
                        const applicationConfig = require('../../applications/data/config.json');
                        const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');

                        const embed = new EmbedBuilder()
                            .setTitle(applicationConfig.mainMessage.title)
                            .setDescription(applicationConfig.mainMessage.description)
                            .setColor(applicationConfig.mainMessage.color)
                            .setTimestamp()
                            .setFooter({ text: 'MT Community' });

                        const row = new ActionRowBuilder();
                        for (const [key, dept] of Object.entries(applicationConfig.departments)) {
                            row.addComponents(
                                new ButtonBuilder()
                                    .setCustomId(`apply_${key}`)
                                    .setLabel(dept.name)
                                    .setEmoji(dept.emoji)
                                    .setStyle(ButtonStyle.Primary)
                            );
                        }

                        await interaction.reply({ embeds: [embed], components: [row], ephemeral: true });
                    } catch (error) {
                        console.error('Error loading applications system:', error);
                        await interaction.reply({
                            content: 'โ ุญุฏุซ ุฎุทุฃ ูู ุชุญููู ูุธุงู ุงูุชูุฏููุงุช.',
                            ephemeral: true
                        });
                    }
                }
            }
        } catch (error) {
            console.error('ุฎุทุฃ ูู ูุนุงูุฌ ุงูุชูุงุนู:', error);
            if (!interaction.replied && !interaction.deferred) {
                await interaction.reply({ content: 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุงูุชูุงุนู', ephemeral: true });
            }
        }
    }
};